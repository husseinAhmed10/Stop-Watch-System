/*
 * mini_project_2.c
 *
 *  Created on: Apr 16, 2023
 *      Author: T.S
 */

#include <avr/io.h>
#include <util/delay.h>
#include <avr/interrupt.h>

unsigned char sec1 = 0;		 //-- -- -0
unsigned char sec2 = 0;		 //-- -- 0-
unsigned char min1 = 0;		 //-- -0 --
unsigned char min2 = 0;		 //-- 0- --
unsigned char hour1 = 0;	 //-0 -- --
unsigned char hour2 = 0;	 //0- -- --

#define appearance_delay 5

void Timer1_init_CTC() {

	/*TIMSK = (1 << OCIE1A);	//enable compare mode

	TCNT1=0;	//start value of the timer

	//start counting up to OCR1A

	OCR1A=15625;	//compare value of the timer using prescalar 1024

	TCCR1A |= (1 << FOC1A) | (1 << FOC1B) ;	//NON PWM


	 * FOC1A: waveform generation CTC mode
	 * CS12,CS10 for 1024 Prescalar
	 * 1024 -> compare value = 977 , 256 -> compare value = 3906 , 128 -> compare value = 7812.5
	 **/

	//TCCR1B |= (1 << CS11) | (1 << CS10) | (1 << WGM12);


	TCNT1 = 0; // Set Timer initial value to 0

	OCR1A = 15625;	//compare value

	TCCR1A |= (1 << FOC1A) | (1 << FOC1B); //non pwm

	TCCR1B |= (1 << CS11) | (1 << CS10) | (1 << WGM12); //64 PRESCALAR , CTC mode

	TIMSK |= (1<<OCIE1A);



}

ISR (TIMER1_COMPA_vect) {

	sec1++;
/*	if (sec1 == 10) {
		sec1 = 0;
		sec2++;
	}
	if (sec2 == 6) {
		sec2 = 0;
		min1++;
		}
	if (min1 == 10) {
		min1 = 0;
		min2++;
	}
	if (min2 == 6) {
		hour2 = 0;
		hour1++;
	}
	if (hour1 == 10) {
		hour1 = 0;
		hour2++;
	}
*/
}

void INT0_init(){

}

ISR(INT0_vect){

}

void INT1_init(){

}

ISR(INT1_vect){

}

void INT2_init(){

}

ISR(INT2_vect){

}

int main(void) {

	//Application Initialization
	DDRA = 0X3F;	//set the pins for the enable and disable for each 7 segments
	DDRC = 0X3F;	//set the pins for the 7 segment appearance

	//Timer and interrupts Initialization
	Sie();
	Timer1_init_CTC();
	INT0_init();
	INT1_init();
	INT2_init();


	while (1) {
		//Application Code (i.e. StopWatch Time appears all the time)

		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0XF0)|(0X01 & 0x0F);
		PORTC = (PORTC & 0XF0)|(sec1 & 0x0F);
		_delay_ms(appearance_delay);
		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0XF0)|(0X02 & 0x0F);
		PORTC = (PORTC & 0XF0)|(sec2 & 0x0F);
		_delay_ms(appearance_delay);
		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0XF0)|(0X04 & 0x0F);
		PORTC = (PORTC & 0XF0)|(min1 & 0x0F);
		_delay_ms(appearance_delay);
		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0XF0)|(0X08 & 0x0F);
		PORTC = (PORTC & 0XF0)|(min2 & 0x0F);
		_delay_ms(appearance_delay);
		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0X0F)|(0X10 & 0xF0);
		PORTC = (PORTC & 0XF0)|(hour1 & 0x0F);
		_delay_ms(appearance_delay);
		//enable the 7 segment required and appear the time
		PORTA = (PORTA & 0X0F)|(0X20 & 0xF0);
		PORTC = (PORTC & 0XF0)|(hour2 & 0x0F);
		_delay_ms(appearance_delay);

	}

	return 0;
}
